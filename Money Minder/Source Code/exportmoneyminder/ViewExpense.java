package exportmoneyminder;

import java.awt.GridBagLayout;
import java.io.BufferedReader;
import java.io.FileWriter;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class ViewExpense extends javax.swing.JFrame {

    /**
     * Creates new form MoneyMinder
     */
    public ViewExpense() {
        initComponents();
        loadTransactionsFromFile();
        expenseTable.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PANEL = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        expenseTable = new javax.swing.JTable();
        editBtn = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        BackExpense = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        HomeBtn5 = new javax.swing.JLabel();
        IncomeBtnPnl4 = new javax.swing.JLabel();
        ExpensesBtnPnl4 = new javax.swing.JLabel();
        AccountsBtnPnl4 = new javax.swing.JLabel();
        ReportsBtnPnl4 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        fromDate = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        toDate = new com.toedter.calendar.JDateChooser();
        enter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PANEL.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 74, 173));
        jLabel13.setText("EXPENSES TRANSACTION HISTORY");

        expenseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Category", "Amount", "Description"
            }
        )
        {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        }
    );
    jScrollPane1.setViewportView(expenseTable);

    editBtn.setBackground(new java.awt.Color(0, 0, 153));
    editBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    editBtn.setForeground(new java.awt.Color(255, 255, 255));
    editBtn.setText("  EDIT  ");
    editBtn.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            editBtnActionPerformed(evt);
        }
    });

    delete.setBackground(new java.awt.Color(0, 0, 153));
    delete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    delete.setForeground(new java.awt.Color(255, 255, 255));
    delete.setText("DELETE");
    delete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            deleteActionPerformed(evt);
        }
    });

    BackExpense.setBackground(new java.awt.Color(0, 0, 153));
    BackExpense.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    BackExpense.setForeground(new java.awt.Color(255, 255, 255));
    BackExpense.setText("BACK");
    BackExpense.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            BackExpenseActionPerformed(evt);
        }
    });

    jPanel7.setBackground(new java.awt.Color(0, 73, 174));

    HomeBtn5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    HomeBtn5.setForeground(new java.awt.Color(255, 255, 255));
    HomeBtn5.setText("HOME");
    HomeBtn5.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            HomeBtn5MouseClicked(evt);
        }
    });

    IncomeBtnPnl4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    IncomeBtnPnl4.setForeground(new java.awt.Color(255, 255, 255));
    IncomeBtnPnl4.setText("INCOME");
    IncomeBtnPnl4.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            IncomeBtnPnl4MouseClicked(evt);
        }
    });

    ExpensesBtnPnl4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    ExpensesBtnPnl4.setForeground(new java.awt.Color(255, 255, 255));
    ExpensesBtnPnl4.setText("EXPENSES");
    ExpensesBtnPnl4.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ExpensesBtnPnl4MouseClicked(evt);
        }
    });

    AccountsBtnPnl4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    AccountsBtnPnl4.setForeground(new java.awt.Color(255, 255, 255));
    AccountsBtnPnl4.setText("ACCOUNTS");
    AccountsBtnPnl4.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            AccountsBtnPnl4MouseClicked(evt);
        }
    });

    ReportsBtnPnl4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    ReportsBtnPnl4.setForeground(new java.awt.Color(255, 255, 255));
    ReportsBtnPnl4.setText("REPORT");
    ReportsBtnPnl4.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            ReportsBtnPnl4MouseClicked(evt);
        }
    });

    jLabel20.setIcon(new javax.swing.ImageIcon("C:\\Users\\Yunise Madri√±an\\Documents\\NetBeansProjects\\MoneyMinder\\src\\main\\java\\assets\\money minder logo.png")); // NOI18N

    javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
    jPanel7.setLayout(jPanel7Layout);
    jPanel7Layout.setHorizontalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
            .addGap(15, 15, 15)
            .addComponent(jLabel20)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(HomeBtn5)
            .addGap(18, 18, 18)
            .addComponent(IncomeBtnPnl4)
            .addGap(18, 18, 18)
            .addComponent(ExpensesBtnPnl4)
            .addGap(18, 18, 18)
            .addComponent(AccountsBtnPnl4)
            .addGap(18, 18, 18)
            .addComponent(ReportsBtnPnl4)
            .addGap(17, 17, 17))
    );
    jPanel7Layout.setVerticalGroup(
        jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel7Layout.createSequentialGroup()
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(IncomeBtnPnl4)
                        .addComponent(HomeBtn5)
                        .addComponent(ExpensesBtnPnl4)
                        .addComponent(AccountsBtnPnl4)
                        .addComponent(ReportsBtnPnl4)))
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel20)))
            .addContainerGap(7, Short.MAX_VALUE))
    );

    fromDate.setBackground(new java.awt.Color(255, 255, 255));

    jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    jLabel16.setForeground(new java.awt.Color(0, 74, 173));
    jLabel16.setText("FROM:");

    jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
    jLabel17.setForeground(new java.awt.Color(0, 74, 173));
    jLabel17.setText("TO:");

    toDate.setBackground(new java.awt.Color(255, 255, 255));

    enter.setBackground(new java.awt.Color(0, 0, 153));
    enter.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
    enter.setForeground(new java.awt.Color(255, 255, 255));
    enter.setText("ENTER");
    enter.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            enterActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout PANELLayout = new javax.swing.GroupLayout(PANEL);
    PANEL.setLayout(PANELLayout);
    PANELLayout.setHorizontalGroup(
        PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(PANELLayout.createSequentialGroup()
            .addGap(360, 360, 360)
            .addComponent(editBtn)
            .addGap(48, 48, 48)
            .addComponent(delete)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(BackExpense)
            .addGap(32, 32, 32))
        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANELLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel13)
            .addGap(202, 202, 202))
        .addGroup(PANELLayout.createSequentialGroup()
            .addGap(122, 122, 122)
            .addGroup(PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANELLayout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(112, 112, 112))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANELLayout.createSequentialGroup()
                    .addComponent(jLabel16)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel17)
                    .addGap(18, 18, 18)
                    .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(enter)
                    .addGap(186, 186, 186))))
    );
    PANELLayout.setVerticalGroup(
        PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(PANELLayout.createSequentialGroup()
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(34, 34, 34)
            .addComponent(jLabel13)
            .addGroup(PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PANELLayout.createSequentialGroup()
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BackExpense)
                    .addGap(15, 15, 15))
                .addGroup(PANELLayout.createSequentialGroup()
                    .addGap(11, 11, 11)
                    .addGroup(PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel16)
                        .addComponent(jLabel17)
                        .addComponent(fromDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(toDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(enter))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(29, 29, 29)
                    .addGroup(PANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(42, Short.MAX_VALUE))))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(PANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
 private void loadTransactionsFromFile() {
        try (BufferedReader reader = new BufferedReader(new FileReader("expenses.txt"))) {
        DefaultTableModel model= (DefaultTableModel)expenseTable.getModel();
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                if (parts.length >= 4) {
                    String date = parts[0].trim();
                    String category = parts[1].trim();
                    String amount = parts[2].trim();
                    String description = (parts.length > 3) ? parts[3].trim() : "";

                    // Add the transaction to the table
                    model.addRow(new Object[]{date, category, "P " + amount ,description});
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
        private void saveTransactionsToFile() {
        try (FileWriter writer = new FileWriter("expenses.txt")) {
            DefaultTableModel model = (DefaultTableModel) expenseTable.getModel();
                for (int row = 0; row < model.getRowCount(); row++) {
                    String date = model.getValueAt(row, 0).toString();
                    String category = model.getValueAt(row, 1).toString();
                    String amount = model.getValueAt(row, 2).toString().replace("P ", "");
                    String description = model.getValueAt(row, 3).toString();

            writer.write(date + ", " + category + ", " + amount + ", " + description);
            writer.write(System.lineSeparator());
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
        }
    
    private void clearTablesAndFields() {
        ((DefaultTableModel) expenseTable.getModel()).setRowCount(0);
    }
      
    
    private void filterTransactions(String fileName, Date startDate, Date endDate, DefaultTableModel model) {
    try (BufferedReader reader = new BufferedReader(new FileReader(fileName))) {
        String line;
        while ((line = reader.readLine()) != null) {
            String[] parts = line.split(",");
            if (parts.length >= 4) {
                String dateText = parts[0].trim();
                Date transactionDate = new SimpleDateFormat("MM-dd-yyyy").parse(dateText);

                // Check if the transaction date is within the selected range
                if ((startDate == null || !transactionDate.before(startDate)) &&
                        (endDate == null || !transactionDate.after(endDate))) {

                    String category = parts[1].trim();
                    double amount = Double.parseDouble(parts[2].trim());
                    String description = parts[3].trim(); 

                    // Add the transaction to the table
                    addTransactionToTable(transactionDate, category, amount,description, model);
                }
            }
        }
    } catch (IOException | ParseException e) {
        e.printStackTrace();
    }
}

    private void addTransactionToTable(Date date, String category, double amount, String desciption,DefaultTableModel model) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd-yyyy");
        String formattedDate = dateFormat.format(date);
        model.addRow(new Object[]{formattedDate, category, String.format("P %.2f", amount), desciption});
    }

      
    private boolean isValidDateFormat(String date) {
        SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
        sdf.setLenient(false);

        try {
            sdf.parse(date);
            return true;
            } catch (ParseException e) {
        return false;
    }
}    
    private void BackExpenseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackExpenseActionPerformed
        ExpensesTransactions expensePanel= new ExpensesTransactions();
        expensePanel.show();
    
        dispose();
    }//GEN-LAST:event_BackExpenseActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
   DefaultTableModel model = (DefaultTableModel) expenseTable.getModel();
    
    // get selected row index
    int selectedRowIndex = expenseTable.getSelectedRow();

    if (selectedRowIndex != -1) {
        String editcategory = model.getValueAt(selectedRowIndex, 1).toString();
        String editamount = model.getValueAt(selectedRowIndex, 2).toString().replace("P ", "");
        String editdescription = model.getValueAt(selectedRowIndex, 3).toString();
        String editdate = model.getValueAt(selectedRowIndex, 0).toString();

        // get the entered data
        JPanel panel = new JPanel(new GridBagLayout());
        Object[] categories = {"Bills", "Groceries", "Utilities", "Transportation", "Personal", "Education", "Entertainment", "Others"};
        JComboBox comboBox = new JComboBox(categories);
        comboBox.setSelectedItem(editcategory);
        JOptionPane.showMessageDialog(null, comboBox, "Edit Transaction", JOptionPane.QUESTION_MESSAGE);
        panel.add(comboBox);

        String selectedCategories = (String) comboBox.getSelectedItem();
        String newDate = JOptionPane.showInputDialog(null, "Enter Date (MM-dd-yyyy)", editdate);

        if (isValidDateFormat(newDate)) {
            if (newDate != null && !newDate.trim().isEmpty()) {
                String newAmount = JOptionPane.showInputDialog(null, "Enter Amount", editamount);

        if (newAmount != null && !newAmount.trim().isEmpty()) {
            try {
                Double.parseDouble(newAmount); 
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid amount. Please enter a valid number.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        String newDescription = JOptionPane.showInputDialog(null, "Enter Amount", editdescription);
                    
        if (newDescription == null && newDescription.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Invalid amount. Please enter a valid desciption.", "Error", JOptionPane.ERROR_MESSAGE);
            return; 
            }
            
        String formattedAmount = String.format("P %.2f", Double.parseDouble(newAmount));
        
            model.setValueAt(selectedCategories, selectedRowIndex, 1);
            model.setValueAt(formattedAmount, selectedRowIndex, 2);
            model.setValueAt(newDate, selectedRowIndex, 0);
            model.setValueAt(newDescription, selectedRowIndex, 3);

            saveTransactionsToFile();
                } else {
                    JOptionPane.showMessageDialog(null, "Amount cannot be blank.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Date cannot be blank.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid date format. Please enter the date in MM-dd-yyyy format.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a row to edit.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_editBtnActionPerformed

    private void HomeBtn5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtn5MouseClicked
    Home home= new Home();
    home.show();
        
    dispose();
    }//GEN-LAST:event_HomeBtn5MouseClicked

    private void IncomeBtnPnl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IncomeBtnPnl4MouseClicked
        IncomeTransactions incomePanel= new IncomeTransactions();
        incomePanel.show();

        dispose();
    }//GEN-LAST:event_IncomeBtnPnl4MouseClicked

    private void ExpensesBtnPnl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExpensesBtnPnl4MouseClicked
        ExpensesTransactions expensePanel= new ExpensesTransactions();
        expensePanel.show();

        dispose();
    }//GEN-LAST:event_ExpensesBtnPnl4MouseClicked

    private void AccountsBtnPnl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AccountsBtnPnl4MouseClicked
        Accounts account= new Accounts();
        account.show();

        dispose();
    }//GEN-LAST:event_AccountsBtnPnl4MouseClicked

    private void ReportsBtnPnl4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ReportsBtnPnl4MouseClicked
        FinancialReport report= new FinancialReport();
        report.show();

        dispose();
    }//GEN-LAST:event_ReportsBtnPnl4MouseClicked

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
        // Get start and end dates from date pickers
        Date startDate = (Date) fromDate.getDate();
        Date endDate = (Date) toDate.getDate();

        clearTablesAndFields();
        filterTransactions("expenses.txt", startDate, endDate, (DefaultTableModel) expenseTable.getModel());
    }//GEN-LAST:event_enterActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
      DefaultTableModel model = (DefaultTableModel)expenseTable.getModel();
      if(expenseTable.getSelectedRowCount()== 1){    
          int option = JOptionPane.showConfirmDialog(this, 
     "Are you sure you want to delete this trasaction?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
          if (option == JOptionPane.YES_OPTION) {
          model.removeRow(expenseTable.getSelectedRow());
          JOptionPane.showMessageDialog(this,"Transaction Deleted");              
          }
      }else{
          if(incomeTable.getRowCount()== 0 ){
              JOptionPane.showMessageDialog(this,"Table is Empty.");
          }else{
              JOptionPane.showMessageDialog(this,"Please select a single Row for Delete.");
          }
      }
      saveTransactionsToFile();
    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewExpense().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AccountsBtnPnl4;
    private javax.swing.JButton BackExpense;
    private javax.swing.JLabel ExpensesBtnPnl4;
    private javax.swing.JLabel HomeBtn5;
    private javax.swing.JLabel IncomeBtnPnl4;
    private javax.swing.JPanel PANEL;
    private javax.swing.JLabel ReportsBtnPnl4;
    private javax.swing.JButton delete;
    private javax.swing.JButton editBtn;
    private javax.swing.JButton enter;
    private javax.swing.JTable expenseTable;
    private com.toedter.calendar.JDateChooser fromDate;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser toDate;
    // End of variables declaration//GEN-END:variables
}
